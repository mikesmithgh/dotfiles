[user]
  name = Mike Smith
  email = 10135646+mikesmithgh@users.noreply.github.com
[push]
  default = current
[core]
  excludesfile = /Users/mike/.gitignore
  autocrlf = input
  editor = nvim
[diff]
  tool = nvimdiff
[merge]
  tool = nvimdiff
[difftool]
  prompt = false
  trustExitCode = true
; [difftool.vimdiff]
  ; cmd = "vim -c \"Gcd\" -c \"Git difftool -y $REMOTE\""
    ; cmd = "echo $@; env"
[diff]
    tool = nvimdiff
[difftool "nvimdiff"]
    cmd = "nvim -d \"$LOCAL\" \"$REMOTE\""
[mergetool]
  prompt = false
  trustExitCode = true
; [difftool "nvimdiff"]
        ; cmd = nvim -d $LOCAL $REMOTE  -c 'wincmd w | wincmd l'
; [mergetool "nvimdiff"]
        ; cmd = nvim -d $MERGED $LOCAL $BASE $REMOTE -c 'wincmd J'
        ; cmd = nvim -d $LOCAL $BASE $REMOTE $MERGED
[log]
  date = format:%m/%d/%Y %I:%M %p
[color "status"]
  untracked = magenta
[pretty]
  distinguishedoneline = %C(66 bold)%h  %C(173 nobold)%ad  %C(150 nobold)%an  %C(reset)%s
;   distinguishedonelinetab = %C(66 bold)%<(8)%h %C(173 nobold)%<(20)%ad %C(150 nobold)%<(19)%an %C(reset)%s
  distinguishedonelinetab = "%C(#83a598 bold)%h %C(#fe8019 nobold)%ad %C(#b5cea8 nobold)%an %C(reset)%s"
  distinguishedmediumtab = %C(173 nobold)commit %C(66 bold)%H%n%C(173 nobold)Merge: %C(66 bold)%p%n%C(186 bold)Author: %C(143 nobold)%an %Creset<%C(150)%ae%Creset>%n%C(186 bold)Date:   %C(143 nobold)%ad%n%n%C(reset)%w(50,4,4)%s%n%n%w(0,4,4)%b
[alias]
  alias = "! git config --get-regexp ^alias\\. | sed -e s_^alias\\._\"$(printf '%b' '\\033[38;5;173m')\"_ -e s_\\ _\"$(printf '%b%s%b' '\\033[0m' '☠' '\\033[38;5;150m')\"_ | grep -v alias | column -n -t -s '☠'"
  br = branch -vv
  cbr = symbolic-ref --short HEAD
  ci = ! GIT_EDITOR='nvim -c \":Git! log | normal! K\"' git commit -v
  cl = ! git --no-pager log
  co = checkout
  deleteprev = branch -d @{-1}
  ; dt = "! args=$@; shift $#; nvim -c \"Gcd\" -c \"Git difftool -y $args\""
  dt = "! args=$@; shift $#; nvim -c \"DiffviewOpen $args\""
  ;f = "! git ls-remote mike --exit code 2>/dev/null && options='-v --multiple mike'; git ls-remote upstream --exit_code 2>/dev/null && [ -z \"$options\" ] && options='-v --multiple upstream' || options=\"$options upstream\"; git fetch $options origin 2>&1 | grep -v '\\[up to date\\]'; if [ $# -gt 0 ]; then git fetch $@; fi; shift $#"
  f = ! bash -ic 'ms_git_f'
  ; fworking = "! shift $#; git ls-remote mike --exit code 2>/dev/null && options='-v --multiple mike'; git fetch $options origin 2>&1 | grep -v '\\[up to date\\]'; if [ $# -gt 0 ]; then git fetch $@; fi; shift $#"
        ; f = "! git ls-remote upstream --exit code 2>/dev/null && options='-v --multiple upstream'; git fetch $options origin 2>&1 | grep -v '\\[up to date\\]'; if [ $# -gt 0 ]; then git fetch $@; fi; shift $#"
        ; ff = "! ( git ls-remote upstream --exit code 2>/dev/null && git fetch -v --multiple upstream origin 2>&1 || git fetch -v origin 2>&1 ) | grep -v '\\[up to date\\]'; if [ $# -gt 0 ]; then git fetch $@; fi; shift $#"
        ; fff = "! git ls-remote upstream --exit code 2>/dev/null && options='-v --multiple upstream'; git fetch $options origin 2>&1 | grep -v '\\[up to date\\]'; if [ $# -gt 0 ]; then git fetch $@; fi; shift $#"
  graph = log --graph --format=distinguishedoneline
  l = ! git --no-pager lv --max-count=10
  ll = ! git --no-pager llv --max-count=2
  llv = log --format=distinguishedmediumtab
  lv = log --format=distinguishedonelinetab
  ml = ! git l --format=distinguishedoneline --author=\"\\($(git config --get user.name)\\)\\|\\(msmith2\\)\"
  mll = ! git ll --author=\"$(git config --get user.name)\"
  mllv = ! git llv --author=\"$(git config --get user.name)\"
  mlv = ! git lv --format=distinguishedoneline --author=\"$(git config --get user.name)\"
  mlmessage = ! git l --format=\"%s\" --author=\"$(git config --get user.name)\"
  mrb = ! git for-each-ref --format=\"%(color:66 bold)%(objectname:short)  %(color:173 nobold)%(authordate:format:%m/%d/%Y %I:%M %p)  %(color:150)%(authorname)  %(color:reset)%(refname:strip=3)\" --sort=authordate refs/remotes | grep \"$(git config --get user.name)\"
  mt = mergetool
  p = pull
  rb = ! git for-each-ref --format=\"%(color:66 bold)%(objectname:short)  %(color:173 nobold)%(authordate:format:%m/%d/%Y %I:%M %p)  %(align:28,left)%(color:150)%(authorname)%(end) %(color:reset)%(refname:strip=3)\" --sort=authordate refs/remotes
  st = status -s
  stashall = ! git add . && git stash
  unset = branch --unset-upstream
  wip = ! git add . && git commit -a -m \"work in progress\"
  cinoreply = ! git commit --author='Mike Smith <10135646+mjsmith1028@users.noreply.github.com>'
  cisign = ! git commit --author='Mike Smith <10135646+mikesmithgh@users.noreply.github.com>' -e -m 'Signed-off-by: Mike Smith <10135646+mikesmithgh@users.noreply.github.com>'
  cipr = ! git commit -e -m \"$(git mlmessage -100 | egrep -m 1 -o '\\[.*[0-9]+]' | tr [:lower:] [:upper:] | xargs -I {} printf '%s:' '' {})\"
  cibr = ! git ci -e -m \"$(echo $(git cbr) | egrep -io '.*[0-9]+' | tr [:lower:] [:upper:] | xargs -I {} printf '[%s]:' '' {})\"
  root = rev-parse --show-toplevel
  prdt = ! $(gh pr view --json baseRefName,headRefName -q .baseRefName,.headRefName | awk ' BEGIN{ printf(\"git dt \") } { printf(\"origin/%s \", $1) }')
	stache = stash
[fetch]
  prune = true
  parallel = 5
  output = compact
[submodule]
  fetchJobs = 5
[filter "lfs"]
  process = git-lfs filter-process
  required = true
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
# enforce ssh
; [url "git@github.com:"]
;   insteadOf = https://github.com/
[url "ssh://git@github.com/"]
  insteadOf = https://github.com/

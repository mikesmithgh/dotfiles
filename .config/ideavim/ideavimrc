"
" https://github.com/JetBrains/ideavim#finding-action-ids
" Finding action ids:
" IJ provides IdeaVim: track action Ids command to show the id of the executed actions. This command can be found in "Search everywhere" (double shift).
"
" "Track action Ids" Details (click to see)
" :actionlist [pattern]
"
" Find IDE actions by id or keymap pattern (E.g. :actionlist extract, :actionlist <C-D)
"

set ideastatusicon=gray

set NERDTree

" change leader key from \ to space
nnoremap <SPACE> <Nop>
let mapleader=' '

" toggle highlight
nnoremap <leader>o/ :set hls! <cr>

" Toggle list characters
nmap <leader>ol :set list!<cr>

" highlight then enter search mode
" no longer working, I submitted a bug: https://youtrack.jetbrains.com/issue/VIM-3392/Keymap-containing-cr-and-no-longer-works
nnoremap / :set hls<cr>/


" yank/put copy/paste mappings
nnoremap Y y$
nnoremap pp :put<CR>
nnoremap PP :.-1put<CR>

vnoremap <leader>Y "+Y
vnoremap <leader>y "+y
vnoremap <leader>p "+p
vnoremap <leader>P "+P

nnoremap <leader>Y "+y$
nnoremap <leader>y "+y
nnoremap <leader>yy "+yy
nnoremap <leader>p "+p<CR>
nnoremap <leader>pp :put +<CR>
nnoremap <leader>P "+P<CR>
nnoremap <leader>PP :.-1put +<CR>


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIMUserInterface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set scroll=5
autocmd BufNewFile,BufRead * set scroll=5
nnoremap <C-e> 5<C-e>
nnoremap <C-y> 5<C-y>
nnoremap <C-h> 3h
nnoremap <C-j> 5j
nnoremap <C-k> 5k
nnoremap <C-l> 3l
vnoremap <C-e> 5<C-e>
vnoremap <C-y> 5<C-y>
vnoremap <C-h> 3h
vnoremap <C-j> 5j
vnoremap <C-k> 5k
vnoremap <C-l> 3l

" Set 7 lines visible above/below the cursor
set scrolloff=7

" Ignore case when searching
set ignorecase

" Case sensitive when searching with at least one uppcase letter
set smartcase

" Highlight search results
set hlsearch

" Makes search act like search in modern browsers
set incsearch

" set number relativenumber

map <leader>ss :setlocal spell!<cr>

" Shortcuts using <leader>
map <leader>sn ]s
map <leader>sp [s
map <leader>sa zg
map <leader>s? z=


" Q to try and act like Neovim but not quite. Do @@ for now
" Revert with ":unmap Q".
map Q @@
sunmap Q

" TODO map me to something
nnoremap S <Nop>



" NERD Tree
nnoremap <C-n>n :NERDTreeToggle<CR>
nnoremap <C-n><C-n> :NERDTreeFind<CR>

set showmode
set showcmd

" Disable bell sounds
set visualbell
set noerrorbells

" in progress

" started successfully tested
:map <leader>b <Action>(ToggleLineBreakpoint)

" diagnostics
:map <leader>d <Action>(ShowErrorDescription)
:map ]d <Action>(GotoNextError)
:map [d <Action>(GotoPreviousError)

:map s<leader> <Action>(SearchEverywhere)
:map so <Action>(RecentFiles)
:map sR <Action>(GotoDeclaration)
:map sf <Action>(GotoFile)
:map sI <Action>(GotoImplementation)
:map sg <Action>(FindInPath)
:map sS <Action>(GotoSymbol)

:map <f5> <Action>(Debug)
:map sb <Action>(Switcher)
" ended successfully tested

:map <leader>d <Action>(ShowContextActions)
:map <C-/> <Action>(CommentByLineComment)k
:map s8 viw<Action>(FindInPath)
:vmap s8 <Action>(FindInPath)
:map s* viw<Action>(Find)
:vmap s* <Action>(Find)

:map <leader><leader>t <Action>(ActivateTerminalToolWindow)
" :map <leader><leader>v :!kitty --start-as maximized --override 'macos_quit_when_last_window_closed yes' git dt &<cr>
:map <leader><leader>v <Action>(Tool_External Tools_Kitty git dt)


" lsp-like commands
" :map <leader>lf <Action>(ReformatCode)
:map <leader>lf <Action>(io.gitlab.arturbosch.detekt.idea.action.AutoCorrect)
:map <leader>lr <Action>(RenameElement)
:map <leader>lk <Action>(ShowHoverInfo)
:map <leader>lt <Action>(ExpressionTypeInfo)
:map <leader>lc <Action>(ShowIntentionActions)

" wincmds
:map <C-w>q <Action>(CloseAllEditors)
:map <C-w>o <Action>(HideAllWindows)


" sethandler <C-D> a:ide

" :command! Kitty ! kitty --override 'env=PATH=/usr/gnu/bin:/usr/local/bin:/bin:/usr/bin:.' --override 'macos_quit_when_last_window_closed yes' >&/dev/null
:command! Kitty action Tool_External Tools_Kitty

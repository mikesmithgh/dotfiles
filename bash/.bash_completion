#!/usr/bin/env bash
# this file is sourced from bash_completion in bashrc

# fzf
# [ -f "$HOME/.fzf.bash" ] && source "$HOME/.fzf.bash"
# the following have been extracted from .fzf.bash
source "$HOMEBREW_PREFIX/opt/fzf/shell/completion.bash" 2> /dev/null
source "$HOMEBREW_PREFIX/opt/fzf/shell/key-bindings.bash"
# disable fzf: ALT-C - cd into the selected directory
bind -r '\ec'
# keep fzf: CTRL-R - Paste the selected command from history into the command line
# keep fzf: CTRL-T - Paste the selected file path into the command line


# git
if [ "$(type -t __git_complete)" = "function" ] && [ "$(type -t __git_main)" = "function" ]; then
  # add 'git' auto completion to 'g'
	__git_complete g __git_main
  _git_br () {   _git_branch "$@"; }
  _git_ci () {   _git_commit "$@"; }
  _git_cl () {   _git_log "$@"; }
  _git_co () {   _git_checkout "$@"; }
  _git_d () {   _git_diff "$@"; }
  _git_dt () {   _git_difftool "$@"; }
  _git_f () {   _git_fetch "$@"; }
  _git_graph () {   _git_log "$@"; }
  _git_l () {   _git_log "$@"; }
  _git_ll () {   _git_log "$@"; }
  _git_llv () {   _git_log "$@"; }
  _git_lv () {   _git_log "$@"; }
  _git_ml () {   _git_log "$@"; }
  _git_mll () {   _git_log "$@"; }
  _git_mllv () {   _git_log "$@"; }
  _git_mlv () {   _git_log "$@"; }
  _git_p () {   _git_pull "$@"; }
  _git_st () {   _git_status "$@"; }
  _git_stashall () {   _git_stash "$@"; }
  _git_unset () {   _git_branch "$@"; }
  _git_wip () {   _git_commit "$@"; }
  _git_cibr () {   _git_commit "$@"; }
fi


# ssh
_ssh() {
	local cur opts
	cur="${COMP_WORDS[COMP_CWORD]}"
	opts=$(grep '^Host' ~/.ssh/config | grep -v '[?*]' | cut -d ' ' -f 2-)
  mapfile -t COMPREPLY < <(compgen -W "$opts" -- "$cur")
	return 0
}
complete -F _ssh ssh


# kubectl
complete -F __start_kubectl k


# sdkman
[[ -s "${SDKMAN_DIR}/bin/sdkman-init.sh" ]] && source "${SDKMAN_DIR}/bin/sdkman-init.sh"

